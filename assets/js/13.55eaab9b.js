(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{353:function(e,t,s){"use strict";s.r(t);var a=s(42),v=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"多环境配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多环境配置"}},[e._v("#")]),e._v(" 多环境配置")]),e._v(" "),s("p",[e._v("在实际项目中，我们开发完成后，需要将项目打包部署到服务器上，一般服务器本地环境、dev环境、uat环境、生产环境，如果每次部署都要修改配置就会很麻烦，而Vue CLI提供了一套环境变量和模式。")]),e._v(" "),s("h2",{attrs:{id:"环境变量与模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境变量与模式"}},[e._v("#")]),e._v(" 环境变量与模式")]),e._v(" "),s("p",[e._v("可以在项目根目录下新建以下几种配置文件：")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v(".env                "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在所有的环境中被载入")]),e._v("\n.env.local          "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在所有的环境中被载入，但会被 git 忽略")]),e._v("\n.env."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 只在指定的模式中被载入")]),e._v("\n.env."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(".local   "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 只在指定的模式中被载入，但会被 git 忽略")]),e._v("\n")])])]),s("p",[e._v("一个环境文件只包含环境变量的“键=值”对：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("FOO=bar\nVUE_APP_SECRET=secret\n")])])]),s("p",[e._v("被载入的变量将会对 "),s("code",[e._v("vue-cli-service")]),e._v(" 的所有命令、插件和依赖可用。")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("环境加载属性")]),e._v(" "),s("p",[e._v("为一个特定模式准备的环境文件 (例如 "),s("code",[e._v(".env.production")]),e._v(") 将会比一般的环境文件 (例如 "),s("code",[e._v(".env")]),e._v(") 拥有更高的优先级。")]),e._v(" "),s("p",[e._v("此外，Vue CLI 启动时已经存在的环境变量拥有最高优先级，并不会被 "),s("code",[e._v(".env")]),e._v(" 文件覆写。")])]),e._v(" "),s("h2",{attrs:{id:"模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模式"}},[e._v("#")]),e._v(" 模式")]),e._v(" "),s("p",[s("strong",[e._v("模式")]),e._v("是Vue CLI项目中一个重要的概念。默认情况下，一个Vue CLI项目有三个模式：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("development")]),e._v("模式用于 "),s("code",[e._v("vue-cli-service serve")])]),e._v(" "),s("li",[s("code",[e._v("production")]),e._v(" 模式用于 "),s("code",[e._v("vue-cli-service build")]),e._v(" 和 "),s("code",[e._v("vue-cli-service test:e2e")])]),e._v(" "),s("li",[s("code",[e._v("test")]),e._v(" 模式用于 "),s("code",[e._v("vue-cli-service test:unit")])])]),e._v(" "),s("p",[e._v("注意模式不同于 "),s("code",[e._v("NODE_ENV")]),e._v("，一个模式可以包含多个环境变量。也就是说，每个模式都会将 "),s("code",[e._v("NODE_ENV")]),e._v(" 的值设置为模式的名称——比如在 development 模式下 "),s("code",[e._v("NODE_ENV")]),e._v(" 的值会被设置为 "),s("code",[e._v('"development"')]),e._v("。")]),e._v(" "),s("p",[e._v("你可以通过为 "),s("code",[e._v(".env")]),e._v(" 文件增加后缀来设置某个模式下特有的环境变量。比如，如果你在项目根目录创建一个名为 "),s("code",[e._v(".env.development")]),e._v(" 的文件，那么在这个文件里声明过的变量就只会在 development 模式下被载入。")]),e._v(" "),s("p",[e._v("你可以通过传递 "),s("code",[e._v("--mode")]),e._v(" 选项参数为命令行覆写默认的模式。例如，如果你想要在构建命令中使用开发环境变量，请在你的 "),s("code",[e._v("package.json")]),e._v(" 脚本中加入：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('"dev-build": "vue-cli-service build --mode development",\n')])])]),s("h2",{attrs:{id:"在项目中配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在项目中配置"}},[e._v("#")]),e._v(" 在项目中配置")]),e._v(" "),s("p",[e._v("在创建的项目中已经生成好了三个配置文件"),s("code",[e._v(".env")]),e._v("、"),s("code",[e._v(".env.development")]),e._v("、"),s("code",[e._v(".env.preview")]),e._v("：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://figure-b.ricardolsw.com/image/image-20200805224531335.png",alt:"image-20200805224531335"}})]),e._v(" "),s("p",[e._v(".env：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("NODE_ENV=production\nVUE_APP_PREVIEW=false\nVUE_APP_API_BASE_URL=/api\n")])])]),s("p",[e._v(".env.development：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("NODE_ENV=development\nVUE_APP_PREVIEW=true\nVUE_APP_API_BASE_URL=/api\n")])])]),s("p",[e._v(".env.preview：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("NODE_ENV=production\nVUE_APP_PREVIEW=true\nVUE_APP_API_BASE_URL=/api\n")])])]),s("p",[e._v("这里.env.development是本地开发环境配置文件，.env是生产环境配置文件，.env.preview是测试环境配置文件，在package.json里scripts属性配置如下：")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"serve"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"vue-cli-service serve"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 使用.env.development")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"build"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"vue-cli-service build"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 使用.env")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"build:preview"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"vue-cli-service build --mode preview"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 使用 .env.preview")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),s("h2",{attrs:{id:"在代码中使用环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在代码中使用环境变量"}},[e._v("#")]),e._v(" 在代码中使用环境变量")]),e._v(" "),s("p",[e._v("只有以 "),s("code",[e._v("VUE_APP_")]),e._v(" 开头的变量会被 "),s("code",[e._v("webpack.DefinePlugin")]),e._v(" 静态嵌入到客户端侧的包中。你可以在应用的代码中这样访问它们：")]),e._v(" "),s("p",[e._v("例如打印上面的VUE_APP_PREVIEW")]),e._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[e._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("VUE_APP_PREVIEW")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),s("p",[e._v("在构建过程中，"),s("code",[e._v("process.env.VUE_APP_PREVIEW")]),e._v("将会被相应的值所取代。在"),s("code",[e._v("VUE_APP_PREVIEW=false")]),e._v("的情况下，它会被替换为"),s("code",[e._v('"false"')]),e._v("。")]),e._v(" "),s("p",[e._v("除了 "),s("code",[e._v("VUE_APP_*")]),e._v(" 变量之外，在你的应用代码中始终可用的还有两个特殊的变量：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("NODE_ENV")]),e._v(" - 会是 "),s("code",[e._v('"development"')]),e._v("、"),s("code",[e._v('"production"')]),e._v(" 或 "),s("code",[e._v('"test"')]),e._v(" 中的一个。具体的值取决于应用运行的模式。")]),e._v(" "),s("li",[s("code",[e._v("BASE_URL")]),e._v(" - 会和 "),s("code",[e._v("vue.config.js")]),e._v(" 中的 "),s("code",[e._v("publicPath")]),e._v(" 选项相符，即你的应用会部署到的基础路径。")])]),e._v(" "),s("h2",{attrs:{id:"只在本地有效的变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#只在本地有效的变量"}},[e._v("#")]),e._v(" 只在本地有效的变量")]),e._v(" "),s("p",[e._v("有的时候你可能有一些不应该提交到代码仓库中的变量，尤其是当你的项目托管在公共仓库时。这种情况下你应该使用一个 "),s("code",[e._v(".env.local")]),e._v(" 文件取而代之。本地环境文件默认会被忽略，且出现在 "),s("code",[e._v(".gitignore")]),e._v(" 中。")]),e._v(" "),s("p",[s("code",[e._v(".local")]),e._v(" 也可以加在指定模式的环境文件上，比如 "),s("code",[e._v(".env.development.local")]),e._v(" 将会在 development 模式下被载入，且被 git 忽略。")])])}),[],!1,null,null,null);t.default=v.exports}}]);